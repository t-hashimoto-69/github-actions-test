name: needs output test

on:
  workflow_call:
jobs:
  test_A:
    name: test A
    runs-on: ubuntu-latest
    outputs:
      test_result: ${{ steps.test_1.outputs.result }}
    steps:
      - name: test 1
        id: test_1
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            return 'Successful';

  test_B:
    name: test B
    runs-on: ubuntu-latest
    outputs:
      test_result: ${{ steps.test_1.outputs.result }}
    steps:
      - name: test 1
        id: test_1
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            return 'Failed';

  test_result:
    name: test result
    needs: [test_A, test_B]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    env:
      NEEDS: ${{ toJSON(needs) }}
    steps:
      - name: test result
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const needs = ${{ needs }};
            console.log(needs);
            const test_result = Object.keys(needs).map(jobId => needs[jobId].outputs.test_result);
            console.log(test_result);
